#pragma once
#include "Lib.hpp"
#include <SDL2/SDL_rect.h>
#include <SDL2/SDL_render.h>
#include <string>
#include <unordered_map>

namespace Engen {

struct SheetData {
  SDL_Texture *texture;
  int spriteW, spriteH;
};

class Sprite {
public:
  Sprite(SDL_Texture *tex, SDL_Rect srcRect) : texture(tex), src(srcRect) {}
  SDL_Texture *texture;
  SDL_Rect src;
  void render(SDL_Renderer* renderer,int cx,int xy)const;
};

class SpriteSheet {
public:
  static void InitSheet(SDL_Renderer *renderer, const std::string path,
                        int spriteW, int sprinteH, const std::string name);
  static Sprite getSptire(const std::string sheetName, int x, int y);

private:
  static std::unordered_map<std::string, SheetData> sheets_;
};

} // namespace Engen
